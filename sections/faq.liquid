<link rel="stylesheet" href="{{ 'section-faq-page.css' | asset_url }}" media="print" onload="this.media='all'">


{%- style -%}
.section-{{ section.id }}-padding {
padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
}

@media screen and (min-width: 750px) {
.section-{{ section.id }}-padding {
padding-top: {{ section.settings.padding_top }}px;
padding-bottom: {{ section.settings.padding_bottom }}px;
}

.footer {
margin-top: 0 !important;
}
}

{%- endstyle -%}

{% assign custom_classes = '' %}


<div class="faq-bg">
	<div class="faq page-width section-{{ section.id }}-padding">
		<div class="rte faq__main">
			<div class="faq__heading">
				<h1 style="margin-top:{{ section.settings.top-margin }}px;">{{ section.settings.heading }}</h1>
			</div>
			<div class="faq__main-content">
				<div class="faq__categories">
					{% for block in section.blocks %}
					{% if section.blocks[0] %}
					{% assign custom_classes = custom_classes | append: 'active' %}
					{% endif %}
					<div class="faq-category {{ custom_classes }}"
						data-category-id="faq-category-{{  block.settings.category | downcase | replace: ' ', '-' }}">
						{{ block.settings.category }}
					</div>
					{% endfor %}
				</div>
				<div class="faq__contents">
					<div class="faq__types">
						{% for block in section.blocks %}
						<div class="faq-type faq-category-{{ block.settings.category | downcase | replace: ' ', '-' }}"
							data-type-id="faq-type-{{  block.settings.type | downcase | replace: ' ', '-' }}">
							{{ block.settings.type }}
						</div>
						{% endfor %}
					</div>
					<div class="faq__qas">
						{% for block in section.blocks %}
						<div class="faq-qa faq-type-{{  block.settings.type | downcase | replace: ' ', '-' }}">
							<div class="question">
								<div class="q-ans__block" id="faq__block">
									<div class="faq_qus" id="faq_qus" data-content-id="faq_{{ forloop.index }}">
										{{ block.settings.question }}
										<span>{% render 'icon-plus-new' %}{% render 'icon-minus-new' %}</span>
									</div>
									<div class="question__ans">
										<p class="faq_ans" id="faq_{{ forloop.index }}">
											{{ block.settings.answer }}
										</p>
									</div>
								</div>
							</div>
						</div>
						{% endfor %}
					</div>
				</div>
			</div>
		</div>
	</div>

	{% javascript %}
	const faqCategories = document.querySelectorAll('.faq-category');
	const faqTypes = document.querySelectorAll('.faq-type');
	const faqQas = document.querySelectorAll('.faq-qa');


	textArr = [];
	faqCategories.forEach(function(d, i) {
	if(textArr.indexOf(d.innerText) > -1) {
	d.remove();
	}
	else {
	textArr.push(d.innerText);
	}
	});

	faqTypes.forEach(function(d, i) {
	if(textArr.indexOf(d.innerText) > -1) {
	d.remove();
	}
	else {
	textArr.push(d.innerText);
	}
	});

	faqCategories.forEach(category => {
	if(category.classList.contains('active')) {
	const categoryId = `.${category.dataset.categoryId}`;
	const contents = document.querySelectorAll(categoryId);
	contents.forEach(function(content){
	content.classList.add('active');
	});
	contents[0].classList.add('selected');
	}
	})

	faqTypes.forEach(type => {
	if(type.classList.contains('selected')) {
	const categoryId = `.${type.dataset.typeId}`;
	const contents = document.querySelectorAll(categoryId);
	contents.forEach(function(content){
	content.classList.add('active');
	});
	}
	})

	faqCategories.forEach(tab => {

	tab.addEventListener('click', function(){

	categoryId = `.${this.dataset.categoryId}`;
	contents = document.querySelectorAll(categoryId);

	faqTypes.forEach(function(type){
	type.classList.remove('active');
	});

	contents.forEach(function(content){
	content.classList.add('active');
	});

	faqCategories.forEach(function(tab){
	tab.classList.remove('active');
	});

	tab.classList.add('active');
	//content.classList.add('active');

	if(tab.classList.contains('active')) {
	contents.forEach(function(content){
	content.classList.add('active');
	});
	contents[0].classList.add('selected');
	}

	faqTypes.forEach(type => {
	if(type.classList.contains('selected')) {
	const categoryId = `.${type.dataset.typeId}`;
	const contents = document.querySelectorAll(categoryId);
	contents.forEach(function(content){
	content.classList.toggle('active');
	})
	}
	})

	})

	});

	faqTypes.forEach(type => {
	type.addEventListener('click', function(){
	typeId = `.${this.dataset.typeId}`;
	contents = document.querySelectorAll(typeId);

	faqQas.forEach(function(qa){
	qa.classList.remove('active');
	});

	contents.forEach(function(content){
	content.classList.add('active');
	});

	faqTypes.forEach(function(tab){
	tab.classList.remove('selected');
	});

	type.classList.add('selected');

	});
	});

	let Faqplus = document.querySelectorAll(".faq_qus .icon-plus-new");
	let Faqminus = document.querySelectorAll(".faq_qus .icon-minus-new");
	let Faqquestions = document.querySelectorAll(".faq_qus");
	let Faqanswers = document.querySelectorAll(".faq_ans");

	Faqquestions.forEach((question) => {
	question.addEventListener("click", (ele) => {
	let ans_id = question.dataset.contentId;
	let ans = document.getElementById(ans_id);

	let FaqiconPlus = question.querySelector(".icon-plus-new");
	let FaqiconMinus = question.querySelector(".icon-minus-new");

	if(!FaqiconMinus.classList.contains('is-active')) {
	FaqiconPlus.classList.remove("is-active");
	FaqiconPlus.classList.add("not-active");
	FaqiconMinus.classList.add("is-active");
	FaqiconMinus.classList.remove("not-active");
	ans.classList.add("is-active");
	} else {
	FaqiconMinus.classList.remove("is-active");
	FaqiconMinus.classList.add("not-active");
	FaqiconPlus.classList.add("is-active");
	FaqiconPlus.classList.remove("not-active");
	ans.classList.remove("is-active");
	}
	});

	});

	{% endjavascript %}

	{% schema %}
	{
	"name": "FAQ",
	"tag": "section",
	"settings": [
	{
	"type": "text",
	"id": "heading",
	"label": "Section Main Heading"
	},
	{
	"type": "range",
	"id": "top-margin",
	"min": 0,
	"max": 100,
	"step": 1,
	"unit": "px",
	"label": "Section Heading Margin Top",
	"default": 50
	},
	{
	"type": "range",
	"id": "padding_top",
	"min": 0,
	"max": 100,
	"step": 4,
	"unit": "px",
	"label": "t:sections.all.padding.padding_top",
	"default": 36
	},
	{
	"type": "range",
	"id": "padding_bottom",
	"min": 0,
	"max": 100,
	"step": 4,
	"unit": "px",
	"label": "t:sections.all.padding.padding_bottom",
	"default": 36
	}
	],
	"blocks":[
	{
	"name": "FAQ Content",
	"type": "faqContent",
	"settings": [
	{
	"type": "text",
	"id": "category",
	"label": "Category"
	},
	{
	"type": "text",
	"id": "type",
	"label": "Type"
	},
	{
	"id": "question",
	"type": "textarea",
	"label": "Question: ",
	"default":"question"
	},
	{
	"type": "html",
	"id": "answer",
	"label": "Answer",
	"default":"answer"
	}
	]
	}
	],
	"presets": [
	{
	"name": "faq"
	}
	]
	}
	{% endschema %}