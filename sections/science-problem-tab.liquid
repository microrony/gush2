{{ 'component-mobile-dropdown.css' | asset_url | stylesheet_tag }}
{{ 'section-problem-tab.css' | asset_url | stylesheet_tag }}

<div class="the-problem-tab gush-page-width">
	{% render 'mobile-dropdown', blocks: section.blocks %}

	<div class="tab-contents">
		{% for block in section.blocks %}
				<div class="tab-content {% if forloop.first -%}
				active
		 {%- endif -%}" id="{{block.settings.title | handleize }}" {{ block.shopify_attributes }}>
		 <div class="left-content">
			<div class="name_formula">
				<h2 class="gush-font-h1">{{block.settings.title}}</h2>
				<div class="image_formula">
					{{ block.settings.chemical_formula | image_url: width: 280 | image_tag }}
				</div>
			</div>
				<div class="image_structure">
					{{ block.settings.chemical_structure | image_url: width: 800 | image_tag }}
				</div>
			</div>
			<div class="right-content">
				<div class="odor_appearance">
					<div class="odor gush-font-p2">
						<p>Odor</p>
						<p>{{block.settings.odor}}</p>
					</div>
					<div class="appearance gush-font-p2">
						<p>Appearance</p>
						<p>{{block.settings.appearance}}</p>
					</div>
			</div>

			<h4 class="gush-font-h2 found_in">{{block.settings.found_in}}</h4>

			<div class="how_it_harm gush-font-p2">
				<p>How does it harm the body?</p>
				<p>{{block.settings.how_it_harm}}</p>
			</div>
			<div class="effects_of_exposure gush-font-p2">
				<p>How does it harm the body?</p>
				<p>{{block.settings.effects_of_exposure}}</p>
			</div>
		</div>
				</div>
		{% endfor %}
		</div>

		<div class="tabs">
			{% for block in section.blocks %}
					<div class="tab {% if forloop.first -%}
					active
			 {%- endif -%}" data-tab-target="#{{block.settings.title | handleize }}" {{ block.shopify_attributes }}>
						<div class="gush-font-p2">{{block.settings.title}}</div>
					</div>
			{% endfor %}
			</div>
</div>

{% javascript %}
const tabs = document.querySelectorAll('.the-problem-tab .tab');
const dropDownOptions = document.querySelectorAll('.the-problem-tab .option');
const tabContents = document.querySelectorAll('.the-problem-tab .tab-content');

dropDownOptions.forEach(option => {
  option.addEventListener('click', () => {
    const target = document.querySelector(option.dataset.optionTarget);
    tabContents.forEach(tabContent => {
      tabContent.classList.remove('active');
    });
    dropDownOptions.forEach(option => {
      option.classList.remove('active');
    });
    option.classList.add('active');
    target.classList.add('active');
		document.querySelector('.the-problem-tab details').removeAttribute("open");
		document.querySelector('.the-problem-tab summary span').textContent = option.textContent;
  })
})

tabs.forEach(tab => {
  tab.addEventListener('click', () => {
    const target = document.querySelector(tab.dataset.tabTarget)
    tabContents.forEach(tabContent => {
      tabContent.classList.remove('active')
    })
    tabs.forEach(tab => {
      tab.classList.remove('active')
    })
    tab.classList.add('active')
    target.classList.add('active')
  })
})
	
{% endjavascript %}


	{% schema %}
	{
		"name": "Science Problem Tab",
		"tag": "section",
			"blocks": [
				{
					"type": "chemical",
					"name": "Chemical",
					"settings": [
					{
						"id": "title",
						"type": "text",
						"label": "Chemical Name"
					},
						{
							"id": "chemical_formula",
							"type": "image_picker",
							"label": "Chemical Formula"
						},
						{
							"id": "chemical_structure",
							"type": "image_picker",
							"label": "Chemical Structure"
						},
						{
							"id": "odor",
							"type": "text",
							"label": "Odor"
						},
						{
							"id": "appearance",
							"type": "text",
							"label": "Appearance"
						},
						{
							"id": "found_in",
							"type": "textarea",
							"label": "Found In"
						},
						{
							"id": "how_it_harm",
							"type": "textarea",
							"label": "How does it harm the body?"
						},
						{
							"id": "effects_of_exposure",
							"type": "textarea",
							"label": "Effects of exposure"
						}
					]
				}
			],"presets": [
			{
			"name": "Science Problem Tab"
			}
			]
		}
		
	{% endschema %}