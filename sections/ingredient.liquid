{{ 'section-ingredient.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  .ingredient{
    background-color: {{ section.settings.color }};
  }
  .ingrediant_sub_heading{
    padding-top: 10px !important;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
    .ingrediant_sub_heading{
    padding-top: 15px !important;
  }
  }
{%- endstyle -%}

<style>
  .faq_qus .qus-li img {
    border-radius: {{ section.settings.radius }}%;
  }
  
</style>

{% if section.settings.page == 'services' %}
{%- style -%}
.ingredient__main {
	display: grid;
	grid-template-columns: 1fr;
	gap: 3rem;
}

  .ingredient__accordion {}
  .faq_qus .qus-li img {width: auto;}

	@media screen and (min-width: 750px) {
		.ingredient__main {
			grid-template-columns: 1fr 2fr;
			gap: 10rem;
		}
	}
{%- endstyle -%}
{% endif %}
{% if section.settings.page == 'product' %}
{%-style-%}
.ingredient{
  padding: 0 ;
}
.ingredient__main {
	display: flex;
  gap:10rem;
  
}
.ingredient__left-container{
  gap:25rem;
}
.ingredient__heading {
  padding-right:100px;
}
.ingredient__heading p{
  white-space: pre-line;
  padding-top:16px;
}
.ingredient__link a{
  color:#302112;;
  text-decoration: none !important;
}
.ingredient__accordion .q-ans__block {
  padding: 20px 0 !important;
}
.question .q-ans__block p.faq_ans.is-active{
  margin: 0 ;
}
.question__ans{
  padding-left:95px;
  
}
.qus-li__inner h3{
  margin:0;
}
.qus-li{
  gap:20px;
}
.ingredient__accordion{
  margin-top:30px;
  max-width:750px;
}
.qus-li img{
  width:75px !important;
  height:75px;
}

@media screen and (max-width: 750px) {
  .ingredient__main {
    padding:25px 25px 50px 25px !important;
    gap: 1rem;
  }
  .qus-li img{
    width:40px !important;
    height:40px;
  }
  .qus-li__inner h3{
    padding-right:20px;
  }
  .question__ans{
    padding-left:60px;    
  }
  .ingredient__link-link{
    margin-top: 85px;
  }
  .ingredient__link-link p a{
    text-decoration: none;
  }
}

{%-endstyle-%}
{% endif %}


<section class="ingredient section-{{ section.id }}-padding section">
  <div class="ingredient__main gush-page-width">
    <div class="ingredient__left-container">
        <div class="ingredient__heading">
          <h2 class="gush-font-h1">{{ section.settings.heading }}</h2>
          {% if section.settings.show_sub_title %}
          <p class="ingrediant_sub_heading">{{ section.settings.sub-heading }}</p>
        {% endif %}
        </div>
        
        <div class="ingredient__link">{{ section.settings.link }}</div>
      {% if section.settings.btn_text != blank %}
      <div class="ingredient__cta-desktop"><a class="cta-button cta-button__fuschia gush-font-teritary" href="{{ section.settings.btn_url }}">{{ section.settings.btn_text }}{% render 'arrow-dotted' %}</a></div>
      {% endif %}
    </div>
    <div class="ingredient__accordion">
        <div class="question">
          <div class="sub-heading">
            <h3>{{ section.settings.sb-heading }}</h3>
          </div>
          {% for block in section.blocks %} {% if block.type == 'text' %}
            <div class="q-ans__block" id="faq__block">
              
              <div class="faq_qus" id="faq_qus" data-content-id="faq_{{ forloop.index }}">
                
                <div class="qus-li"><img src="{{ block.settings.faq_img | img_url: '80x80', crop: 'center'}}" alt="FAQ Image"> 
                    <div class="qus-li__inner">
                      <h3 class="gush-font-h3">{{ block.settings.title }}</h3><p>{{ block.settings.faq_quality }}</p>
                    </div>
                  </div>
                
                <span>{% render 'icon-plus-new' %}{% render 'icon-minus-new' %}</span>
                
              </div>
              <div class="question__ans">
              <p class="faq_ans gush-font-p1" id="faq_{{ forloop.index }}">
                {{ block.settings.faq_ans }}
              </p>
            </div>
              
            </div>
            {% endif %} {% endfor %}
          </div>
          <div class="ingredient__link-link">{{ section.settings.link }}</div>
          {% if section.settings.btn_text != blank %}
          <div class="ingredient__cta-mobile"><a class="cta-button cta-button__fuschia gush-font-teritary" href="{{ section.settings.btn_url }}">{{ section.settings.btn_text }}{% render 'arrow-dotted' %}</a></div>
          {% endif %}
    </div>
  </div>
</section>

<script>  
  let Faqplus = document.querySelectorAll(".faq_qus .icon-plus-new");
  let Faqminus = document.querySelectorAll(".faq_qus .icon-minus-new");
  let Faqquestions = document.querySelectorAll(".faq_qus");
  let Faqanswers = document.querySelectorAll(".faq_ans");
   
  Faqquestions.forEach((question) => {
    question.addEventListener("click", (ele) => {
      let ans_id = question.dataset.contentId;
      let ans = document.getElementById(ans_id);

      let FaqiconPlus = question.querySelector(".icon-plus-new");
      let FaqiconMinus = question.querySelector(".icon-minus-new");
       
      if(!FaqiconMinus.classList.contains('is-active')) {       
        FaqiconPlus.classList.remove("is-active");
        FaqiconPlus.classList.add("not-active");
        FaqiconMinus.classList.add("is-active");
        FaqiconMinus.classList.remove("not-active");
        ans.classList.add("is-active");
      } else {
        FaqiconMinus.classList.remove("is-active");
        FaqiconMinus.classList.add("not-active");
        FaqiconPlus.classList.add("is-active");
        FaqiconPlus.classList.remove("not-active");
        ans.classList.remove("is-active");
      }
     });
     
   });
 </script>
{% schema %}
{
  "name": "Ingredient Section",
  "tag": "section",
  "class": "faq__section",
  "settings": [
    {
      "type": "color",
      "id": "color",
      "label": "Select a Color"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "sub-heading",
      "label": "Sub Heading"
    },
    {
      "type": "richtext",
      "id": "link",
      "label": "Add a link"
    },
    {
      "type": "text",
      "id": "btn_text",
      "label": "Button Text"
    },
    {
      "type": "url",
      "id": "btn_url",
      "label": "Add a button link"
    },
    {
      "type": "text",
      "id": "sb-heading",
      "label": "Sub Heading"
    },
    {
      "type": "range",
      "id": "radius",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "%",
      "default": 0,
      "label": "Image Radius"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type":"checkbox",
      "id":"show_sub_title",
      "label":"Sub title show hide",
      "default": false
    },
    {
      "type": "select",
      "id": "page",
      "label": "Page",
      "options": [
        {
          "value": "product",
          "label": "Product"
        },
        {
          "value": "services",
          "label": "Services"
        }
      ],
      "default": "services"
    }
  ],
  "blocks": [
    {
      "name": "Text Block",
      "type": "text",
      "settings": [
        {
          "type": "image_picker",
          "id": "faq_img",
          "label": "Upload an Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Question"
        },
        {
          "type": "text",
          "id": "faq_quality",
          "label": "Quality"
        },
        {
          "type": "textarea",
          "id": "faq_ans",
          "label": "Answer"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Ingredient Section"
    }
  ]
}
{% endschema %}