{{ 'component-mobile-dropdown.css' | asset_url | stylesheet_tag }}
{{ 'section-the-testing-tab.css' | asset_url | stylesheet_tag }}

<div class="the-testing-tab gush-page-width">
	{% render 'mobile-dropdown', blocks: section.blocks%}
	<div class="tabs">
		{% for block in section.blocks %}
		<div class="tab {% if forloop.first -%}
				active
		 {%- endif -%}" data-tab-target="#{{block.settings.title | handleize }}" {{ block.shopify_attributes }}>
			<div>{{block.settings.title}}</div>
		</div>
		{% endfor %}
	</div>

	<div class="tab-contents">
		{% for block in section.blocks %}
		{% case block.type %}
      {% when 'removal' %}
			<div class="tab-content {% if forloop.first -%}
				active
		 {%- endif -%}" id="{{block.settings.title | handleize }}" {{ block.shopify_attributes }}>
		 <div class="content">
		 <div class="left-content">
			<div class="image">
				{{ block.settings.image | image_url: width: 800 | image_tag }}
			</div>
			</div>
			<div class="right-content">
			<ul>
				{%if block.settings.item_1 != blank%}
				<li><span>{% render "icon-arrow-right-gushi"%}</span>{{block.settings.item_1}}</li>
				{% endif %}
				{%if block.settings.item_2 != blank%}
				<li><span>{% render "icon-arrow-right-gushi"%}</span>{{block.settings.item_2}}</li>
				{% endif %}
				{%if block.settings.item_3 != blank%}
				<li><span>{% render "icon-arrow-right-gushi"%}</span>{{block.settings.item_3}}</li>
				{% endif %}
			</ul>
			</div>
		</div>
		<div class="test_description">
			<p class="gush-font-p1">{{block.settings.tested_by}}</p>
			<p class="gush-font-p1 description">{{block.settings.short_description}}</p>
		</div>
		  </div>
			{% else %}
			<div class="tab-content {% if forloop.first -%}
				active
		 {%- endif -%}" id="{{block.settings.title | handleize }}" {{ block.shopify_attributes }}>
		 <div class="image">
			{{ block.settings.image | image_url: width: 1280 | image_tag }}
		</div>
		<div class="test_description">
			<p class="gush-font-p1">{{block.settings.tested_by}}</p>
			<p class="gush-font-p1 description">{{block.settings.short_description}}</p>
		</div>
		  </div>
		{% endcase %}
		{% endfor %}
		</div>

</div>

{% javascript %}
const tabs = document.querySelectorAll('.the-testing-tab .tab');
const dropDownOptions = document.querySelectorAll('.the-testing-tab .option');
const tabContents = document.querySelectorAll('.the-testing-tab .tab-content');

dropDownOptions.forEach(option => {
  option.addEventListener('click', () => {
    const target = document.querySelector(option.dataset.optionTarget);
    tabContents.forEach(tabContent => {
      tabContent.classList.remove('active');
    });
    dropDownOptions.forEach(option => {
      option.classList.remove('active');
    });
    option.classList.add('active');
    target.classList.add('active');
		document.querySelector('.the-problem-tab details').removeAttribute("open");
		document.querySelector('.the-problem-tab summary span').textContent = option.textContent;
  })
})

tabs.forEach(tab => {
  tab.addEventListener('click', () => {
    const target = document.querySelector(tab.dataset.tabTarget)
    tabContents.forEach(tabContent => {
      tabContent.classList.remove('active')
    })
    tabs.forEach(tab => {
      tab.classList.remove('active')
    })
    tab.classList.add('active')
    target.classList.add('active')
  })
})
	
{% endjavascript %}


	{% schema %}
	{
		"name": "Science Testing Tab",
		"tag": "section",
			"blocks": [
				{
					"type": "removal",
					"name": "Removal",
					"settings": [
					  {
						  "id": "title",
						  "type": "text",
						  "label": "Tab title"
					  },
						{
						  "id": "image",
						  "type": "image_picker",
						  "label": "Image"
					  },
						{
						  "id": "item_1",
						  "type": "text",
						  "label": "Item 1"
					  },
						{
						  "id": "item_2",
						  "type": "text",
						  "label": "Item 2"
					  },
						{
						  "id": "item_3",
						  "type": "text",
						  "label": "Item 3"
					  },
						{
						  "id": "short_description",
						  "type": "textarea",
						  "label": "Short description"
					  },
						{
						  "id": "tested_by",
						  "type": "text",
						  "label": "Tested By"
					  }
					]
				},
				{
					"type": "molding",
					"name": "Molding",
					"settings": [
						{
							"id": "title",
							"type": "text",
							"label": "Tab title"
						},
						{
							"id": "text",
							"type": "text",
							"label": "Text"
						},
						{
							"id": "uncoated_surface_text",
							"type": "text",
							"label": "Uncoated Surface Text"
						},
						{
							"id": "uncoated_surface_image",
							"type": "image_picker",
							"label": "Uncoated Surface Image"
						},
						{
							"id": "gush-coated_surface_text",
							"type": "text",
							"label": "Gush Coated Surface Text"
						},
						{
							"id": "gush-coated_surface_image",
							"type": "image_picker",
							"label": "Gush Coated Surface Image"
						},
						{
							"id": "environment",
							"type": "html",
							"label": "Environment"
						},
						{
							"id": "temperature",
							"type": "html",
							"label": "Temperature"
						},
						{
							"id": "testing_duration",
							"type": "html",
							"label": "Testing Duration"
						},
						{
							"id": "surface_dimensions",
							"type": "html",
							"label": "Surface Dimensions"
						},
						{
							"id": "molding_clearance",
							"type": "image_picker",
							"label": "Molding Clearance"
						},
						{
							"id": "short_description",
							"type": "textarea",
							"label": "Short description"
						},
						{
							"id": "tested_by",
							"type": "text",
							"label": "Tested By"
						}
					]
				}
			],"presets": [
			{
			"name": "Science Testing Tab"
			}
			]
		}
		
	{% endschema %}